/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        /**
         * Temporarily switches to a layer (`&mo`) while a modifier is held.
         * Analogous to QMK's `LM()`, using a parameterized macro.
         *
         * Params:
         *  1. Layer to switch to
         *  2. Modifier to press while layer is active
         *
         * Example:
         *  `&lm NUM_LAYER LSHIFT`
         */
        lm: lm {
            label = "LAYER_MOD";
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
    };
};

/ {
    behaviors {
        escgr: escape_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "DM4_ESCAPE_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        // dm4: for macOS style Cmd-Delete
        mide: minus_backspace {
            compatible = "zmk,behavior-mod-morph";
            label = "DM4_MINUS_BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp BKSP>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
    };
};

#define BRI_UP (C_BRIGHTNESS_INC)
#define BRI_DN (C_BRIGHTNESS_DEC)
#define O_TOG OUT_TOG
#define O_USB OUT_USB
#define O_BLE OUT_BLE
#define BT_S BT_SEL
#define STAR ASTERISK

/ {
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
	&bootloader
	&escgr      &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp NUM_4  &kp NUM_5  &none      &kp C_PP   &kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp NUM_0  &mide
	&kp TAB     &kp Q      &kp W      &kp E      &kp R      &kp T      &kp BRI_UP &kp M_VOLU &kp Y      &kp U      &kp I      &kp O      &kp P      &kp BSLH
	&kp LCTL    &kp A      &kp S      &kp D      &kp F      &kp G                            &kp H      &kp J      &kp K      &kp L      &lt 2 SCLN &mt RGUI SQT
	&kp LSFT    &kp Z      &kp X      &kp C      &kp V      &kp B      &kp BRI_DN &kp M_VOLD &kp N      &kp M      &kp CMMA   &kp DOT    &kp FSLH   &kp RSFT
	&none       &none      &mo 2      &kp LALT   &kp LGUI                                               &mo 1      &lm 1 RSFT &none      &none      &none
	                                                        &none      &none      &none      &none
	                                             &kp SPC    &kp BKSP   &kp HOME   &kp PGUP   &kp RET    &kp SPC
	                                                                   &kp END    &kp PGDN
			>;
		};

		layer_1 {
			bindings = <
	&bootloader
	&kp GRAVE   &kp F1     &kp F2     &kp F3     &kp F4     &kp F5     &none      &none      &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &kp EQL
	&none       &none      &none      &none      &none      &none      &none      &none      &none      &none      &kp UP     &kp LBKT   &kp RBKT   &kp EQL
	&none       &none      &none      &none      &none      &kp HOME                         &kp PGUP   &kp LEFT   &kp DOWN   &kp RIGHT  &none      &none
	&none       &none      &none      &none      &none      &kp END    &none      &none      &kp PGDN   &kp C_PREV &kp C_PP   &kp C_NEXT &kp F11    &kp F12
	&bootloader &none      &none      &none      &none                                                  &none      &none      &none      &none      &none
	                                                        &none      &none      &none      &none
	                                             &none      &none      &none      &none      &none      &none
	                                                                   &none      &none
			>;
		};

		layer_2 {
			bindings = <
	&bootloader
	&out O_USB  &bt BT_S 0 &bt BT_S 1 &bt BT_S 2 &bt BT_S 3 &bt BT_S 4 &bt BT_CLR &none      &none      &kp PLUS   &kp MINUS  &kp STAR   &kp SLASH  &kp EQL
	&out O_TOG  &none      &none      &none      &none      &none      &none      &none      &none      &kp NUM_7  &kp NUM_8  &kp NUM_9  &none      &none
	&out O_BLE  &none      &none      &none      &none      &none                            &none      &kp NUM_4  &kp NUM_5  &kp NUM_6  &none      &none
	&none       &none      &none      &none      &none      &none      &none      &none      &none      &kp NUM_1  &kp NUM_2  &kp NUM_3  &none      &none
	&bootloader &none      &none      &none      &none                                                  &kp NUM_0  &kp DOT    &none      &none      &none
	                                                        &none      &none      &none      &none
	                                             &none      &none      &none      &none      &none      &none
	                                                                   &none      &none
			>;
		};
	};
};
